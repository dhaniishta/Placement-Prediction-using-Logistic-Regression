# -*- coding: utf-8 -*-
"""toyproject.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1znYipXDk1XD_B2k8gNQIE7e25-Dvm0B1
"""

#steps
#preprocessing + eda + feature selection
#extract i/p and o/p cols
#scale the values
#train test split
#train the model (here we use logistic regression)
#evaluate the model/ model selection
#deploy the model

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
# %matplotlib inline

df= pd.read_csv('/content/placement.csv')

df.head()

df.shape

df.info()

df= df.iloc[:,1:] #want all rows but want columns from the first one

df.head()

plt.scatter(df['cgpa'],df['iq'])

plt.scatter(df['cgpa'],df['iq'],c=df['placement']) #use logistic regression

X= df.iloc[:,0:2] #want columns from 0 to 1, 2 will not be included
y= df.iloc[:,-1 ] #want last column

from sklearn.model_selection import train_test_split

X_train,X_test,y_train,y_test= train_test_split(X,y,test_size=0.1) 90% train 10% test

from sklearn.preprocessing import StandardScaler

scaler= StandardScaler()

X_train= scaler.fit_transform(X_train)

X_test= scaler.transform(X_test)

from sklearn.linear_model import LogisticRegression

clf= LogisticRegression()

clf.fit(X_train,y_train)

y_pred= clf.predict(X_test)

y_pred

y_test #compare y_pred and y_test

from sklearn.metrics import accuracy_score

accuracy_score(y_pred,y_test)

from mlxtend.plotting import plot_decision_regions #to visualize your model

plot_decision_regions(X_train,y_train.values,clf=clf,legend=2) #X_train already had values only

import pickle #converts any object into  file

pickle.dump(clf,open('model.pkl','wb')) #now you can deploy this file on any website